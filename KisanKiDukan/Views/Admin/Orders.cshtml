@model KisanKiDukan.Models.ViewModels.OrderShowListModelAdmin
@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    hr {
        margin-top: 5px !important;
        margin-bottom: 2px !important;
    }

    .row {
        margin-top: 1%;
    }

    .w100 {
        width: 100px;
    }

    .margin10 {
        margin-left: 10px;
    }

    #date {
        color: #333;
        background-color: #fff;
        border-color: #ccc;
        border-radius: 3px;
        padding: 6px 12px;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: normal;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        cursor: pointer;
        border: 1px solid transparent;
    }
</style>
@*<h2>Orders</h2>*@
<div style="width:100%;">
    <h4>Orders</h4>
    @using (Html.BeginForm("Orders", "Admin", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-4">
                <input name="term" placeholder="Search by name/email/phone" class="form-control" />
            </div>
            <div class="col-md-2">
                <input name="oid" placeholder="Search by Order Id" class="form-control" />
            </div>
            <div class="col-md-3">
                <input name="from" type="date" placeholder="Date From" class="form-control" />
            </div>
            <div class="col-md-3">
                <input name="to" type="date" placeholder="DateTo" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                @Html.DropDownList("statusCode", Model.OrderStatusList, "Select Status", new { id = "statusCode", @class = "form-control" })
            </div>
            <div class="col-md-2">
                <input type="submit" value="Search" class="btn btn-info" />
                <a href="/Admin/Orders" class="btn btn-primary">All</a>
            </div>
        </div>
        <hr />
    }
    @if (Model.Order.Count() > 0)
    {
        <div class="row">
            <div class="col-md-12 dv" style="height:360px;overflow:auto;">
                <table class="table table-striped table-bordered">
                    <tr>
                        <th>Order ID</th>
                        <th>Delivery type</th>
                        <th>Customer Detail</th>
                        <th>Vendor Name</th>
                        <th>Order Date</th>
                        <th>Total Item</th>
                        <th>Total Price</th>
                        <th>Payment Mode</th>
                        <th>Order Status</th>
                        <th>Order Status Updated At</th>
                        <th>Payment Status</th>
                        <th>Action</th>
                    </tr>
                    @foreach (var item in Model.Order.OrderByDescending(a => a.Id))
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>
                                @if (item.ScheduledDeliveryDate == null)
                                {
                                    <span>Regular</span>
                                }
                                else
                                {
                                    <span>
                                        Scheduled at <br />
                                        @item.ScheduledDeliveryDate.Value.ToString("dd-MMM-yyyy")
                                        &nbsp;
                                        @item.SlotTiming
                                    </span>
                                }
                            </td>
                            <td>
                                <b>Name : </b>@item.Name<hr />
                                <b>Phone No. : </b>@item.PhoneNumber<hr />
                                <b>Email-Id : </b>@item.Email<hr />
                                <b>Address : </b>@if (!string.IsNullOrEmpty(@item.Address))
                                {
                                    <span>@item.Address</span>
                                }
                                @if (!string.IsNullOrEmpty(item.State))
                                {
                                    <span>@item.State</span>
                                }
                                @if (!string.IsNullOrEmpty(item.City))
                                {
                                    <span>@item.City</span>
                                }
                                @if (!string.IsNullOrEmpty(item.PinCode))
                                {
                                    <b>Pincode :</b>  @item.PinCode
                                }
                            </td>
                            <td>@item.VendorName</td>
                            <td>
                                <span>@item.OrderDate.ToString("dd-MMM-yyyy")</span>
                            </td>
                            <td>@item.Total_Items</td>
                            <td><i class="fa fa-inr" aria-hidden="true"></i>&nbsp;@item.Total_Price</td>
                            <td>
                                <span style="color:dodgerblue;font-size:18px; font-weight:bold">@item.PaymentMode</span>
                            </td>
                            <td style="text-transform:uppercase">
                                @item.OrderStatus
                            </td>
                            <td>
                                @if (item.StatusUpdateDate != null)
                                {
                                    <span>@item.StatusUpdateDate.Value.ToString("dd-MMM-yyyy")</span>
                                }
                            </td>
                            <td>
                                @if (item.PaymentMode.Equals("COD"))
                                {
                                    if (item.PaymentStatus.Equals(false))
                                    {
                                        <span><a href="/Admin/PayStatus?id=@item.Id" class="btn btn-danger">Not Paid</a></span>
                                    }
                                    else
                                    {
                                        <span><a href="/Admin/PayStatus?id=@item.Id" class="btn btn-success">Paid</a></span>
                                    }
                                }
                                else
                                {
                                    <span style="font-size:17px;color:#1aa10f;font-weight:bold"> PAID @*<i class="fa fa-check"></i>*@</span>
                                }
                            </td>
                            <td>
                                <a href="/Admin/OrderDetail?id=@item.Id" class="btn btn-info">More Detail</a>
                                <span class="btn btn-info" data-toggle="modal" data-target="#model_@item.Id">Update Status</span>
                                <div id="model_@item.Id" class="modal fade" role="dialog">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                <h4 class="modal-title">Update Status</h4>
                                            </div>
                                            <div class="modal-body">
                                                <div class="form-group">
                                                    <input type="hidden" id="orderDetailId" value="@item.Id" />
                                                    @Html.DropDownList("StatusCode", Model.OrderStatusList, "Select Status", new { id = "statusCode", @class = "form-control" })
                                                </div>
                                                <div class="form-group">
                                                    <button type="button" class="btn bnt-primary" onclick="UpdateStatus(this)">Save</button>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <ul class="pagination">
            @for (int i = 1; i <= Model.NumberOfPages; i++)
            {
                if (Model.Page == i)
                {
                    <li class="active"><a href="/Admin/Orders?page=@i">@i</a></li>
                }
                else
                {
                    <li><a href="/Admin/Orders?page=@i">@i</a></li>
                }
            }
        </ul>
    }
    else
    {
        <h4>No records found</h4>
    }
</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" rel="stylesheet" />
@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://www.appelsiini.net/download/jquery.jeditable.js"></script>
    <script src="/Scripts/jquery.jeditable.datepicker.js"></script>
    <script>
        $(document).ready(function () {
            var oldValue = '';
             $('.editDate').editable('/Admin/Orders', {
                cssclass: 'jeditForm',
                tooltip: 'Edit Date',
                type: 'datepicker',
                datepicker: {
                    dateFormat: 'dd-mm-yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '2018:' +(new Date().getFullYear()  - 18)
                },
                onsubmit: function (settings, original) {
                    oldValue = original.revert;
                },
                submitdata: function () {
                    return {
                        id: $(this).data('id'),
                        PropertyName: $(this).data('propertyname')
                    }
                },
                callback: function (value, settings) {
                    var jsonData = $.parseJSON(value);
                    if (jsonData.status) {
                        $(this).text(jsonData.value);
                    }
                    else {
                        $(this).text(oldValue);
                    }
                }
            })
        })
    </script>
    <script>
    function UpdateStatus(obj){
        var el = $(obj);
        var frm = el.parent().parent();
        var orderDetailId = frm.find("#orderDetailId").val();
        var statusCode = frm.find("#statusCode").val();
        var data = JSON.stringify({
            OrderDetailId: orderDetailId,
            StatusCode: statusCode
        });
        var url = window.location.href;
        $.ajax({
            url: '/Admin/UpdateOrderStatus',
            type: 'post',
            contentType: 'application/json',
            data:data
        }).done(function (response) {
            if(response!="ok")
            {
                console.log("server error");
            }
            window.location.href = url;
        })
        .fail(function (err) {
            console.log(err.statusText);
            window.location.href = url;
        });
    }
    </script>
}
